{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","mystyle","color","mode","backgroundColor","border","borderColor","className","style","id","type","Navbar","to","title","aboutText","onClick","togglemode","htmlFor","TextForm","useState","text","setText","heading","onChange","event","target","value","rows","newText","toUpperCase","showalert","disabled","length","toLocaleLowerCase","split","join","filter","element","Alert","height","alert","role","word","lower","toLowerCase","charAt","slice","capitalize","msg","App","setmode","setalert","message","setTimeout","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.29427a52.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    // const [mystyle, setmystyle] = useState({\r\n    //     color: 'black',\r\n    //     backgroundColor: 'white'\r\n    // })\r\n    let mystyle= {\r\n      color: props.mode=== 'dark'? 'white': '#1e2958',\r\n      backgroundColor: props.mode==='dark'?'#1e2958':'white',\r\n      border:' 2px solid',\r\n      borderColor: props.mode=== 'dark'? 'white': '#1e2958'\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container my-2\" >\r\n             <h2 className=\"my-2\" style={{color: props.mode==='dark'? 'white':'black'}}>About Us</h2>\r\n            <div className=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"flush-headingOne\" >\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\" style={mystyle}>\r\n       <strong>Analyze your text</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"flush-collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\" style={mystyle}>\r\n      <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\" style={mystyle}>\r\n      <strong>Free to use</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"flush-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\" style={mystyle}>\r\n      <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\" style={mystyle}>\r\n      <strong>Browser compatible</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"flush-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\" style={mystyle}>\r\n      <div className=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li>\r\n              \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n\r\n            {/* <form action=\"/action_page.php\">\r\n              <label htmlFor=\"favcolor\">Select your favorite color:</label>\r\n              <input type=\"color\" id=\"favcolor\" name=\"favcolor\" value=\"#ff0000\"/>\r\n              <input type=\"submit\" value=\"Submit\" id=\"submit\" onClick={setdm}/>\r\n            </form> */}\r\n\r\n\r\n            <div className={`form-check form-switch text-${props.mode === 'dark '?  'light': 'dark'}`} >\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n            <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes= {\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}\r\n// Navbar.defaultProps= {\r\n//     title: 'Set title here',\r\n//     aboutText: 'About text here'\r\n// }","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleToupper= () =>{\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showalert(\"converted to Uppercase\",\"success\");\r\n    }\r\n\r\n    const handleTolower= () =>{\r\n        let newText= text.toLocaleLowerCase();\r\n        setText(newText);\r\n        props.showalert(\"converted to Lowercase\",\"success\");\r\n    }\r\n\r\n    const handleOnchange= (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const clearAll= () => {\r\n        let newText= '';\r\n        setText(newText);\r\n        props.showalert(\"Text cleared\",\"success\");\r\n    }\r\n\r\n    // const copyText= () =>{\r\n    //     var text = document.getElementByID(\"myBox\");\r\n    //     text.Select();\r\n    //     navigator.clipboard.writeText(text.value);\r\n    // }\r\n    const handleSpaces= () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n    <>\r\n    \r\n    <div className=\"container\" >\r\n    <h2 style={{color: props.mode=== 'dark'? 'white': 'black' }}>{props.heading}</h2>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" onChange={handleOnchange} value={text} id=\"myBox\" rows=\"8\" style={{backgroundColor: props.mode=== 'dark' ? '#4d5fae' : 'white', color: props.mode=== 'dark'? 'white': 'black' }}></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary mt-2 mx-1 my-1\" onClick={handleToupper} disabled={text.length===0}>CONVERT TO UPPERCASE</button>\r\n    <button className=\"btn btn-primary mt-2 mx-1 my-1\" onClick={handleTolower} disabled={text.length===0}>CONVERT TO LOWERCASE</button>\r\n    <button className=\"btn btn-primary mt-2 mx-1 my-1\" onClick={clearAll} disabled={text.length===0}>CLEAR</button>\r\n    <button className=\"btn btn-primary mt-2 mx-1 my-1\" onClick={handleSpaces} disabled={text.length===0}>Handle Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\">\r\n        <h2 style={{color: props.mode=== 'dark'? 'white': 'black' }}>TEXT SUMMARY</h2>\r\n        <p style={{color: props.mode=== 'dark'? 'white': 'black' }}>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p style={{color: props.mode=== 'dark'? 'white': 'black' }}>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n        <h2 style={{color: props.mode=== 'dark'? 'white': 'black' }}>Preview</h2>\r\n        <p style={{color: props.mode=== 'dark'? 'white': 'black' }}>{text.length > 0 ? text: 'Nothing to preview'}</p>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower= word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div  style={{height: '50px'}}>\r\n       { props.alert && \r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>}\r\n            </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n   const [mode, setmode] = useState('light');\n   const [alert, setalert] = useState(null);\n\n   const showalert= (message, type)=>{\n     setalert({\n       msg: message,\n       type: type\n     })\n     setTimeout(() => {\n       setalert(null);\n     }, 1500);\n   }\n\n   const togglemode= () => {\n     if(mode === 'dark'){\n       setmode('light')\n       document.body.style.backgroundColor= 'white'\n       showalert(\"Light mode has been enabled\",\"success\");\n       document.title= \"Text-Utils- Light Mode\";\n     }\n     else{\n       setmode('dark')\n       document.body.style.backgroundColor= '#2d2d9b'\n       showalert(\"Dark mode has been enabled\",\"success\");\n       document.title= \"Text-Utils- Dark Mode\";\n     }\n   }\n\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode= {mode} togglemode= {togglemode}/>\n    <Alert alert=\"This is alert\" alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch> \n          <Route path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route path=\"/\">\n          <TextForm showalert={showalert} heading=\"Enter the text to analyze\" mode= {mode}/>\n          </Route>\n         </Switch>\n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}